diff --git a/index.d.ts b/index.d.ts
index d37f518dd645945193de473874cd1fecc4f68d11..ad40dcf6b2ca944043572ea63b4b7a9c46ca79cb 100755
--- a/index.d.ts
+++ b/index.d.ts
@@ -1193,11 +1193,11 @@ export class Db extends EventEmitter {
      * @returns Promise if no callback is passed
      * @see https://mongodb.github.io/node-mongodb-native/3.6/api/Db.html#collection
      */
-    collection<TSchema = DefaultSchema>(
+    collection<TSchema extends { [key: string]: any } = DefaultSchema>(
         name: string,
         callback?: MongoCallback<Collection<TSchema>>,
     ): Collection<TSchema>;
-    collection<TSchema = DefaultSchema>(
+    collection<TSchema extends { [key: string]: any } = DefaultSchema>(
         name: string,
         options: DbCollectionOptions,
         callback?: MongoCallback<Collection<TSchema>>,
@@ -1241,12 +1241,12 @@ export class Db extends EventEmitter {
      * @returns Promise if no callback is passed
      * @see https://mongodb.github.io/node-mongodb-native/3.6/api/Db.html#createCollection
      */
-    createCollection<TSchema = DefaultSchema>(name: string, callback: MongoCallback<Collection<TSchema>>): void;
-    createCollection<TSchema = DefaultSchema>(
+    createCollection<TSchema extends { [key: string]: any } = DefaultSchema>(name: string, callback: MongoCallback<Collection<TSchema>>): void;
+    createCollection<TSchema extends { [key: string]: any } = DefaultSchema>(
         name: string,
         options?: CollectionCreateOptions,
     ): Promise<Collection<TSchema>>;
-    createCollection<TSchema = DefaultSchema>(
+    createCollection<TSchema extends { [key: string]: any } = DefaultSchema>(
         name: string,
         options: CollectionCreateOptions,
         callback: MongoCallback<Collection<TSchema>>,
@@ -1378,17 +1378,17 @@ export class Db extends EventEmitter {
      * @returns Promise if no callback is passed
      * @see https://mongodb.github.io/node-mongodb-native/3.6/api/Db.html#renameCollection
      */
-    renameCollection<TSchema = DefaultSchema>(
+    renameCollection<TSchema extends { [key: string]: any } = DefaultSchema>(
         fromCollection: string,
         toCollection: string,
         callback: MongoCallback<Collection<TSchema>>,
     ): void;
-    renameCollection<TSchema = DefaultSchema>(
+    renameCollection<TSchema extends { [key: string]: any } = DefaultSchema>(
         fromCollection: string,
         toCollection: string,
         options?: { dropTarget?: boolean | undefined },
     ): Promise<Collection<TSchema>>;
-    renameCollection<TSchema = DefaultSchema>(
+    renameCollection<TSchema extends { [key: string]: any } = DefaultSchema>(
         fromCollection: string,
         toCollection: string,
         options: { dropTarget?: boolean | undefined },
@@ -2553,11 +2553,11 @@ export interface Collection<TSchema extends { [key: string]: any } = DefaultSche
      * @param options Optional settings
      * @see https://mongodb.github.io/node-mongodb-native/3.6/api/Collection.html#watch
      */
-    watch<T = TSchema>(
+    watch<T extends { [key: string]: any } = TSchema>(
         pipeline?: object[],
         options?: ChangeStreamOptions & { session?: ClientSession | undefined },
     ): ChangeStream<T>;
-    watch<T = TSchema>(options?: ChangeStreamOptions & { session?: ClientSession | undefined }): ChangeStream<T>;
+    watch<T extends { [key: string]: any } = TSchema>(options?: ChangeStreamOptions & { session?: ClientSession | undefined }): ChangeStream<T>;
 }
 
 /** Update Query */
@@ -2906,7 +2906,7 @@ export type FilterQuery<T> = {
     RootQuerySelector<T>;
 
 /** @see https://docs.mongodb.com/v3.6/reference/method/db.collection.bulkWrite/#insertone */
-export type BulkWriteInsertOneOperation<TSchema> = {
+export type BulkWriteInsertOneOperation<TSchema extends { [key: string]: any }> = {
     insertOne: {
         document: OptionalId<TSchema>;
     };
@@ -2982,7 +2982,7 @@ export type BulkWriteDeleteManyOperation<TSchema> = {
  *
  * @see https://mongodb.github.io/node-mongodb-native/3.6/api/Collection.html#bulkWrite
  */
-export type BulkWriteOperation<TSchema> =
+export type BulkWriteOperation<TSchema extends { [key: string]: any }> =
     | BulkWriteInsertOneOperation<TSchema>
     | BulkWriteUpdateOneOperation<TSchema>
     | BulkWriteUpdateManyOperation<TSchema>